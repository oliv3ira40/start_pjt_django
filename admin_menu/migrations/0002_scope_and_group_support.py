# Generated by Django 4.2.16 on 2025-10-27 21:47
from django.db import migrations, models
import django.db.models.deletion
from django.db.models import Q


def create_default_scope(apps, schema_editor):
    MenuScope = apps.get_model("admin_menu", "MenuScope")
    MenuConfig = apps.get_model("admin_menu", "MenuConfig")

    default_scope, _created = MenuScope.objects.get_or_create(
        name="Não superusuários",
        group=None,
        defaults={"priority": 0},
    )

    for config in MenuConfig.objects.all():
        config.scope = default_scope
        config.save(update_fields=["scope"])


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("admin_menu", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MenuScope",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Nome")),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        help_text="Escopos com prioridade maior são escolhidos primeiro quando o usuário pertence a vários grupos.",
                        verbose_name="Prioridade",
                    ),
                ),
                (
                    "group",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_menu_scope",
                        to="auth.group",
                        verbose_name="Grupo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Escopo",
                "verbose_name_plural": "Escopos",
                "ordering": ("-priority", "name", "pk"),
            },
        ),
        migrations.AlterModelOptions(
            name="menuconfig",
            options={
                "ordering": ("scope__priority", "scope__name", "-is_active", "pk"),
                "verbose_name": "Configuração de menu",
                "verbose_name_plural": "Configurações de menu",
            },
        ),
        migrations.RemoveConstraint(
            model_name="menuconfig",
            name="unique_active_menu_per_scope",
        ),
        migrations.RenameField(
            model_name="menuconfig",
            old_name="scope",
            new_name="legacy_scope",
        ),
        migrations.RenameField(
            model_name="menuconfig",
            old_name="active",
            new_name="is_active",
        ),
        migrations.AlterField(
            model_name="menuconfig",
            name="is_active",
            field=models.BooleanField(
                default=False,
                help_text="Marque para tornar essa configuração a vigente para o escopo.",
                verbose_name="Ativa",
            ),
        ),
        migrations.AddField(
            model_name="menuconfig",
            name="scope",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="menu_configs",
                to="admin_menu.menuscope",
                verbose_name="Escopo",
            ),
        ),
        migrations.RunPython(create_default_scope, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="menuconfig",
            name="legacy_scope",
        ),
        migrations.AlterField(
            model_name="menuconfig",
            name="scope",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="menu_configs",
                to="admin_menu.menuscope",
                verbose_name="Escopo",
            ),
        ),
        migrations.AddConstraint(
            model_name="menuconfig",
            constraint=models.UniqueConstraint(
                condition=Q(("is_active", True)),
                fields=("scope",),
                name="unique_active_menu_per_scope",
            ),
        ),
    ]
